{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["DTitle","withStyles","theme","root","margin","padding","spacing","props","children","classes","other","onClose","DialogTitle","disableTypography","className","Typography","variant","DContent","DialogContent","DActions","DialogActions","Dice","dieListClassName","rollTrigger","data-roll","diceRolls","id","data-side","fairDiceRoller","pRandRoll","nDecks","this","probOfRandRoll","numDecks","reset","didConfigChange","buildDeck","shuffleDeck","deck","n","i","j","push","length","Math","floor","random","console","log","r","pop","randomRoll","useStickyState","defaultValue","key","React","useState","stickyValue","window","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","App","showConfig","setShowConfig","probHelpOpen","setProbHelpOpen","deckHelpOpen","setDeckHelpOpen","showGraph","setShowGraph","setProbOfRandRoll","setNumDecks","setDiceRolls","setRollTrigger","initialRollCount","rollCount","setRollCount","handleConfigClose","setConfig","handleProbHelpClose","handleDeckHelpClose","AppBar","position","Toolbar","display","Box","flexGrow","src","height","alt","align","IconButton","color","onClick","Settings","Dialog","open","Grid","direction","container","alignItems","justify","item","ClickAwayListener","onClickAway","Tooltip","PopperProps","disablePortal","disableFocusListener","disableHoverListener","disableTouchListener","placement","title","Help","Slider","style","width","min","max","step","valueLabelDisplay","valueLabelFormat","v","onChange","event","marks","label","Button","autoFocus","newDiceRoll","roll","rollCountIdx","tempRollCounts","count","justifyContent","keys","data","indexBy","top","right","bottom","left","colors","scheme","axisLeft","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","labelTextColor","animate","moitionStiffness","motionDamping","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0e548fe1.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport { \n  AppBar, \n  Box, \n  Button, \n  ClickAwayListener,\n  Dialog, \n  DialogActions, \n  DialogTitle, \n  DialogContent, \n  Grid,\n  IconButton, \n  Slider, \n  Toolbar, \n  Typography, \n  Tooltip} from '@material-ui/core'\nimport { \n  Help, \n  Settings, }  from '@material-ui/icons'\nimport { \n  withStyles } from '@material-ui/core/styles'\nimport 'typeface-roboto'\nimport {ResponsiveBar} from '@nivo/bar'\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n});\n\nconst DTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <DialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n    </DialogTitle>\n  );\n});\n\nconst DContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(DialogContent);\n\nconst DActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(DialogActions);\n\nfunction Dice(props) {\n  let dieListClassName = [];\n  dieListClassName[0] = \"die-list \";\n  dieListClassName[1] = \"die-list \";\n  if (props.rollTrigger) {\n    dieListClassName[0] += \"even-roll\";\n    dieListClassName[1] += \"odd-roll\";\n  } else {\n    dieListClassName[0] += \"odd-roll\";\n    dieListClassName[1] += \"even-roll\";\n  }\n\n  return (\n    <div className=\"dice\">\n      <ol className={dieListClassName[0]} data-roll={props.diceRolls[0]} id=\"die-1\">\n        <li className=\"die-item\" data-side=\"1\">\n          <span className=\"dot\"></span>\n        </li>\n        <li className=\"die-item\" data-side=\"2\">\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n        </li>\n        <li className=\"die-item\" data-side=\"3\">\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n        </li>\n        <li className=\"die-item\" data-side=\"4\">\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n        </li>\n        <li className=\"die-item\" data-side=\"5\">\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n        </li>\n        <li className=\"die-item\" data-side=\"6\">\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n        </li>\n      </ol>\n      <ol className={dieListClassName[1]} data-roll={props.diceRolls[1]} id=\"die-2\">\n        <li className=\"die-item\" data-side=\"1\">\n          <span className=\"dot\"></span>\n        </li>\n        <li className=\"die-item\" data-side=\"2\">\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n        </li>\n        <li className=\"die-item\" data-side=\"3\">\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n        </li>\n        <li className=\"die-item\" data-side=\"4\">\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n        </li>\n        <li className=\"die-item\" data-side=\"5\">\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n        </li>\n        <li className=\"die-item\" data-side=\"6\">\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n          <span className=\"dot\"></span>\n        </li>\n      </ol>\n    </div>\n  );\n}\n\n  \n\nclass FairDiceRoller {\n  constructor(pRandRoll, nDecks) {\n    this.probOfRandRoll = pRandRoll;\n    this.numDecks = nDecks;\n    this.reset();\n  }\n  setConfig(pRandRoll, nDecks) {\n    let didConfigChange = false;\n    if (pRandRoll !== this.probOfRandRoll ||\n        nDecks !== this.numDecks) {\n        didConfigChange = true;\n    }\n    this.probOfRandRoll=pRandRoll;\n    this.numDecks = nDecks;\n    if (didConfigChange) {\n      this.reset();\n    }\n  }\n  reset() { \n    this.buildDeck();\n    //console.log('reset after build ' + JSON.stringify(this.deck));\n    this.shuffleDeck();\n    //console.log('reset after shuffle '+JSON.stringify(this.deck));\n  }\n  buildDeck() {\n    this.deck=[];\n    for (let n = 1; n <= this.numDecks; n++) {\n      for (let i=1; i <= 6; i++) {\n        for (let j=1; j <= 6; j++) {\n          this.deck.push([i,j]);\n        }\n      }\n    }\n  }\n  shuffleDeck() {\n    for (let i = this.deck.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i\n      [this.deck[i], this.deck[j]] = [this.deck[j], this.deck[i]];\n    }\n  }\n  randomRoll() {\n    return [\n      Math.floor(Math.random() * 6)+1,\n      Math.floor(Math.random() * 6)+1];\n  }\n  roll() {\n    if (Math.random() >= (this.probOfRandRoll/100.0)) {\n      console.log(\"returning a card draw\");\n      let r = this.deck.pop();\n      if (this.deck.length === 0) this.reset();\n      return r;\n    }\n    console.log(\"returning a pure random roll\")\n    return this.randomRoll();\n  }\n}\nconst fairDiceRoller = new FairDiceRoller(25,1);\n\nfunction useStickyState(defaultValue, key) {\n  const [value, setValue] = React.useState(() => {\n    const stickyValue = window.localStorage.getItem(key);\n    return stickyValue !== null\n      ? JSON.parse(stickyValue)\n      : defaultValue;\n  });\n  React.useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n  return [value, setValue];\n}\n\nfunction App() {\n  const [showConfig, setShowConfig] = useState(false);\n  const [probHelpOpen, setProbHelpOpen] = useState(false);\n  const [deckHelpOpen, setDeckHelpOpen] = useState(false);\n  const [showGraph, setShowGraph] = useState(true);\n  // -- config state\n  const [probOfRandRoll, setProbOfRandRoll] = useStickyState(25, 'probOfRandRoll');\n  const [numDecks, setNumDecks] = useStickyState(1, 'numberOfDecks');\n  // -- dice state\n  const [diceRolls, setDiceRolls] = useState([6,6]);\n  const [rollTrigger, setRollTrigger] = useState(true);\n  // -- graph state\n  const initialRollCount=[\n    {'diceTotal': '2', 'count': 0},\n    {'diceTotal': '3', 'count': 0},\n    {'diceTotal': '4', 'count': 0},\n    {'diceTotal': '5', 'count': 0},\n    {'diceTotal': '6', 'count': 0},\n    {'diceTotal': '7', 'count': 0},\n    {'diceTotal': '8', 'count': 0},\n    {'diceTotal': '9', 'count': 0},\n    {'diceTotal': '10','count': 0},\n    {'diceTotal': '11','count': 0},\n    {'diceTotal': '12','count': 0}];\n\n  const [rollCount, setRollCount] = useState(initialRollCount);\n\n  const handleConfigClose = () => {\n    fairDiceRoller.setConfig(probOfRandRoll, numDecks);\n    setShowConfig(false);\n  }\n  const handleProbHelpOpen = () => { setProbHelpOpen(true);}\n  const handleProbHelpClose = () => { setProbHelpOpen(false);}\n  const handleDeckHelpOpen = () => { setDeckHelpOpen(true);}\n  const handleDeckHelpClose = () => { setDeckHelpOpen(false);}\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"sticky\">\n        <Toolbar display=\"flex\">\n          <Box flexGrow={1}><img src='./transparent-logolinear.png' height=\"36px\" alt=\"Fairer Dice\" align=\"left\"/></Box>\n          <IconButton color=\"inherit\" \n            onClick={() => setShowConfig(true)}\n          >\n            <Settings/>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Dialog \n        open={showConfig} \n        onClose={handleConfigClose}>\n        <DTitle onClose={handleConfigClose}>Config Options</DTitle>\n        <DContent>\n          <Grid direction='row' container='true' alignItems='center' justify='space-between'>\n            <Grid item='true'>\n              <Typography>% probability of random roll</Typography>\n            </Grid>\n            <Grid item='true'>\n              <ClickAwayListener onClickAway={handleProbHelpClose}>\n                <Tooltip\n                  PopperProps={{\n                    disablePortal: true,\n                  }}\n                  disableFocusListener\n                  disableHoverListener\n                  disableTouchListener\n                  placement=\"left\"\n                  onClose={handleProbHelpClose}\n                  open={probHelpOpen}\n                  title=\"On each roll an initial random event is used to determine whether to draw from the shuffled list of dice rolls (the deck) or a purely random dice roll.\">\n                  <IconButton><Help onClick={handleProbHelpOpen}/></IconButton>\n                </Tooltip>\n              </ClickAwayListener>\n            </Grid>\n          </Grid>\n          <Slider          \n            style={{width:'97%'}}\n            value={probOfRandRoll} \n            min={0}\n            max={100}\n            step={1}\n            valueLabelDisplay=\"auto\"\n            valueLabelFormat={(v) => v + \"%\"}\n            onChange = {(event, value) => setProbOfRandRoll(value)}\n          />\n          <Grid direction='row' container='true' alignItems='center' justify='space-between'>\n            <Grid item='true'>\n              <Typography>Number of 36 roll card decks</Typography>\n            </Grid>\n            <Grid item='true'>\n              <ClickAwayListener onClickAway={handleDeckHelpClose}>\n                <Tooltip\n                  PopperProps={{\n                    disablePortal: true,\n                  }}\n                  disableFocusListener\n                  disableHoverListener\n                  disableTouchListener\n                  placement=\"left\"\n                  onClose={handleDeckHelpClose}\n                  open={deckHelpOpen}\n                  title=\"All 36 possible die combination are placed in a list like a deck of cards.  The deck is shuffled and cards are drawn to determine the roll.  One to three 36-card decks can be used\">\n                  <IconButton><Help onClick={handleDeckHelpOpen}/></IconButton>\n                </Tooltip>\n              </ClickAwayListener>\n            </Grid>\n          </Grid>\n          <Slider\n            style={{width:'97%'}}\n            value={numDecks} \n            min={1}\n            max={3}\n            step={1}\n            marks={[{value:1,label:'1'},\n                    {value:2,label:'2'},\n                    {value:3,label:'3'}]}\n            onChange = {(event, value) => setNumDecks(value)}\n          />\n        </DContent>\n        <DActions>\n          <Button autoFocus onClick={handleConfigClose}>OK</Button>\n        </DActions>\n      </Dialog>\n      <Box onClick={() => {\n          let newDiceRoll = fairDiceRoller.roll();\n          setDiceRolls(newDiceRoll);\n          setRollTrigger(!rollTrigger);\n          let rollCountIdx = newDiceRoll[0]+newDiceRoll[1]-2;\n          let tempRollCounts = rollCount;\n          tempRollCounts[rollCountIdx].count = tempRollCounts[rollCountIdx].count + 1;\n          setRollCount(tempRollCounts);\n        }}>\n        <Box>\n          <Dice\n            diceRolls = {diceRolls}\n            rollTrigger = {rollTrigger}   \n          />\n        </Box>\n        <Box>\n        <Typography variant=\"h1\">\n          {diceRolls[0]+diceRolls[1]}\n        </Typography>\n        </Box>\n      </Box>\n      <Box height=\"250px\">\n        <Box display=\"flex\" justifyContent=\"flex-end\" style={{width:'100%'}}>\n          <Button\n            onClick={() => {setShowGraph(!showGraph);}}\n          >\n            {showGraph ? 'Hide Graph' :  'Show Graph'}\n          </Button>\n        </Box>\n        <Box display={showGraph ? 'flex':'none'} height='100%'>\n          <ResponsiveBar\n            //keys={['2','3,','4','5','6','7','8','9','10','11','12']}\n            keys={['count']}\n            data={rollCount}\n            indexBy={\"diceTotal\"}\n            margin={{top:50, right:50, bottom: 50, left: 50}}\n            padding={0.3}\n            colors={{scheme: 'red_yellow_blue'}}\n            axisLeft={{\n              tickSize:0,\n              tickPadding:5,\n              tickRotation:0,\n              legend:'roll count',\n              legendPosition:'middle',\n              legendOffset:-35\n            }}\n            labelTextColor=\"white\"\n            animate={true}\n            moitionStiffness={90}\n            motionDamping={15}\n          />\n        </Box>\n      </Box>\n      <Box position=\"fixed\" display=\"flex\" justifyContent=\"flex-end\" style={{width:'100%', bottom:'5px'}}>\n        <Button \n          color=\"secondary\"\n          onClick={() => {setRollCount(initialRollCount);fairDiceRoller.reset();}}\n        >\n          Reset</Button>\n      </Box>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}